[{"D:\\Coding Projects\\demo-app-movie\\src\\index.js":"1","D:\\Coding Projects\\demo-app-movie\\src\\App.js":"2","D:\\Coding Projects\\demo-app-movie\\src\\reportWebVitals.js":"3","D:\\Coding Projects\\demo-app-movie\\src\\pages\\Home.js":"4","D:\\Coding Projects\\demo-app-movie\\src\\pages\\MoviePage.js":"5","D:\\Coding Projects\\demo-app-movie\\src\\pages\\SearchPage.js":"6","D:\\Coding Projects\\demo-app-movie\\src\\componet\\Sliker.js":"7","D:\\Coding Projects\\demo-app-movie\\src\\componet\\Card.js":"8","D:\\Coding Projects\\demo-app-movie\\src\\componet\\CardMeta.js":"9"},{"size":529,"mtime":1637688676000,"results":"10","hashOfConfig":"11"},{"size":1146,"mtime":1637687658000,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1637541860000,"results":"13","hashOfConfig":"11"},{"size":977,"mtime":1637687528000,"results":"14","hashOfConfig":"11"},{"size":1768,"mtime":1637689278000,"results":"15","hashOfConfig":"11"},{"size":3488,"mtime":1637689592000,"results":"16","hashOfConfig":"11"},{"size":855,"mtime":1637689506000,"results":"17","hashOfConfig":"11"},{"size":890,"mtime":1637688654000,"results":"18","hashOfConfig":"11"},{"size":568,"mtime":1637623060000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nv1zgj",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Coding Projects\\demo-app-movie\\src\\index.js",[],"D:\\Coding Projects\\demo-app-movie\\src\\App.js",[],"D:\\Coding Projects\\demo-app-movie\\src\\reportWebVitals.js",[],"D:\\Coding Projects\\demo-app-movie\\src\\pages\\Home.js",[],"D:\\Coding Projects\\demo-app-movie\\src\\pages\\MoviePage.js",[],"D:\\Coding Projects\\demo-app-movie\\src\\pages\\SearchPage.js",["39","40","41"],"import { Menu, Input, Space, Dropdown, Button, Pagination } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport CardMeta from \"../componet/CardMeta\";\r\n\r\nfunction SearchPage() {\r\n  const [word, setWord] = useState(\"\");\r\n  const [type, setType] = useState(\"Movie\");\r\n  const [page, setPage] = useState();\r\n  const [movies, setMovies] = useState();\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item>\r\n        <a onClick={() => setType(\"Movie\")}>Movie</a>\r\n      </Menu.Item>\r\n      <Menu.Item>\r\n        <a onClick={() => setType(\"TV Show\")}>TV Show</a>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  const { Search } = Input;\r\n  let searchMovie = () => {\r\n    if (type === \"Movie\") {\r\n      axios\r\n        .get(\r\n          `https://api.themoviedb.org/3/search/movie?api_key=682a2911788370c5648bfd6c26712e0f&language=en-US&page=1`,\r\n          { params: { query: word } }\r\n        )\r\n        .then((res) => {\r\n          //console.log(res.data);\r\n          setMovies(res.data);\r\n        });\r\n    } else if (type === \"TV Show\") {\r\n      axios\r\n        .get(\r\n          `https://api.themoviedb.org/3/search/tv?api_key=682a2911788370c5648bfd6c26712e0f&language=en-US&page=1`,\r\n          { params: { query: word } }\r\n        )\r\n        .then((res) => {\r\n          //console.log(res.data);\r\n          setMovies(res.data);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (type === \"Movie\") {\r\n      axios\r\n        .get(\r\n          `https://api.themoviedb.org/3/search/movie?api_key=682a2911788370c5648bfd6c26712e0f&language=en-US&page=${page}`,\r\n          { params: { query: word } }\r\n        )\r\n        .then((res) => {\r\n          //console.log(res.data);\r\n          setMovies(res.data);\r\n        });\r\n    } else if (type === \"TV Show\") {\r\n      axios\r\n        .get(\r\n          `https://api.themoviedb.org/3/search/tv?api_key=682a2911788370c5648bfd6c26712e0f&language=en-US&page=${page}`,\r\n          { params: { query: word } }\r\n        )\r\n        .then((res) => {\r\n          //console.log(res.data);\r\n          setMovies(res.data);\r\n        });\r\n    }\r\n  }, [page]);\r\n\r\n  return (\r\n    <div className=\"bg-gray-300 w-full\">\r\n      <div className=\"mx-40 flex flex-col\">\r\n        <div className=\"flex flex-row m-2\">\r\n          <div className=\"mx-1\">\r\n            <Dropdown overlay={menu}>\r\n              <Button>\r\n                {type} <DownOutlined />\r\n              </Button>\r\n            </Dropdown>\r\n          </div>\r\n          <div className=\"\">\r\n            <Space direction=\"vertical\">\r\n              <Search\r\n                value={word}\r\n                onChange={(e) => setWord(e.target.value)}\r\n                placeholder=\"Search\"\r\n                onSearch={searchMovie}\r\n                style={{ width: 200 }}\r\n              />\r\n            </Space>\r\n          </div>\r\n        </div>\r\n        <div className=\"m-3\">\r\n          {movies ? (\r\n            <Pagination\r\n              current={page}\r\n              showSizeChanger={false}\r\n              pageSize={20}\r\n              total={movies.total_results}\r\n              onChange={(page) => {\r\n                setPage(page);\r\n              }}\r\n            />\r\n          ) : null}\r\n        </div>\r\n        <div className=\"flex flex-wrap\">\r\n          {movies\r\n            ? movies.results.map((movie) => <CardMeta movie={movie} />)\r\n            : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPage;\r\n","D:\\Coding Projects\\demo-app-movie\\src\\componet\\Sliker.js",[],"D:\\Coding Projects\\demo-app-movie\\src\\componet\\Card.js",[],"D:\\Coding Projects\\demo-app-movie\\src\\componet\\CardMeta.js",[],{"ruleId":"42","severity":1,"message":"43","line":15,"column":9,"nodeType":"44","endLine":15,"endColumn":45},{"ruleId":"42","severity":1,"message":"43","line":18,"column":9,"nodeType":"44","endLine":18,"endColumn":47},{"ruleId":"45","severity":1,"message":"46","line":70,"column":6,"nodeType":"47","endLine":70,"endColumn":12,"suggestions":"48"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'type' and 'word'. Either include them or remove the dependency array.","ArrayExpression",["49"],{"desc":"50","fix":"51"},"Update the dependencies array to be: [page, type, word]",{"range":"52","text":"53"},[2153,2159],"[page, type, word]"]